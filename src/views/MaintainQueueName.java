/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import helper.J;
import helpers.Func;
import java.util.ArrayList;
import models.Adm_user_bean;
import models.DBConnQueue;
import models.PMS_Queue_Type_Bean;

/**
 *
 * @author umarmukhtar
 */
public class MaintainQueueName extends javax.swing.JFrame {

    private static int limit = 100;
    private static int cols = 5;
    
    /**
     * Creates new form MaintainQueueName
     */
    public MaintainQueueName() {
        initComponents();
        
        setComboList();
        
        setList();
    }
    
    private static void setList() {
        
        cbx_qtc.setSelectedIndex(0);
        txt_qnc.setText("");
        cbx_userid.setSelectedIndex(0);
        txt_desc.setText("");
        txt_quota.setText("0");
        cbx_status.setSelectedIndex(0);
        
        for (int i = 0; i < limit; i++) {
            for (int j = 0; j < cols; j++) {
                tbl_qt.setValueAt("", i, j);
            }
        }
        
        String sql = "SELECT * "
                + "FROM pms_queue_name ";
        DBConnQueue dbc = new DBConnQueue();
        ArrayList<ArrayList<String>> data = dbc.getQuery(sql);
        
        for (int i = 0; i < limit && i < data.size(); i++) {
            tbl_qt.setValueAt(data.get(i).get(0), i, 0);
            tbl_qt.setValueAt(data.get(i).get(1), i, 1);
            tbl_qt.setValueAt(data.get(i).get(3), i, 2);
            tbl_qt.setValueAt(data.get(i).get(2), i, 3);
            tbl_qt.setValueAt(data.get(i).get(4), i, 4);
        }
    }
    
    private static void setComboList() {
        String sql = "SELECT * "
                + "FROM pms_queue_type ";
        DBConnQueue dbc = new DBConnQueue();
        ArrayList<ArrayList<String>> data = dbc.getQuery(sql);
        
        cbx_qtc.removeAllItems();
        for (int i = 0; i < data.size(); i++) {
            PMS_Queue_Type_Bean pqt = new PMS_Queue_Type_Bean();
            pqt.setQueue_type(data.get(i).get(0));
            pqt.setQueue_type_name(data.get(i).get(1));
            pqt.setStatus(data.get(i).get(2));
            cbx_qtc.addItem(pqt);
        }
        
        String sql2 = "SELECT * "
                + "FROM adm_user ";
        DBConnQueue dbc2 = new DBConnQueue();
        ArrayList<ArrayList<String>> data2 = dbc2.getQuery(sql2);
        
        cbx_userid.removeAllItems();
        for (int i = 0; i < data2.size(); i++) {
            Adm_user_bean au = new Adm_user_bean();
            au.setUser_id(data2.get(i).get(0));
            au.setHealth_facility_code(data2.get(i).get(1));
            au.setUser_name(data2.get(i).get(3));
            cbx_userid.addItem(au);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbx_qtc = new javax.swing.JComboBox();
        cbx_userid = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txt_desc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_quota = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbx_status = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_qt = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txt_qnc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Maintain Queue Name"));

        jLabel1.setText("Queue Type Code : ");

        jLabel2.setText("Queue Name Code : ");

        cbx_qtc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx_qtcItemStateChanged(evt);
            }
        });

        cbx_userid.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_userid.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx_useridItemStateChanged(evt);
            }
        });

        jLabel3.setText("Description : ");

        jLabel4.setText("Quota : ");

        txt_quota.setText("0");

        jLabel5.setText("Status : ");

        cbx_status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive" }));

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tbl_qt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Queue Type Code", "Queue Name Code", "Staff ID", "Description", "Quota"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_qt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_qtMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_qt);

        jLabel6.setText("Staff (optional) : ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbx_qtc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbx_userid, 0, 249, Short.MAX_VALUE)
                            .addComponent(txt_qnc)
                            .addComponent(txt_desc)
                            .addComponent(txt_quota, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbx_status, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbx_qtc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_qnc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbx_userid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_quota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbx_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PMS_Queue_Type_Bean pqt = (PMS_Queue_Type_Bean) cbx_qtc.getSelectedItem();
        String queue_type = pqt.getQueue_type();
        String qnc = txt_qnc.getText();
        Adm_user_bean au = (Adm_user_bean) cbx_userid.getSelectedItem();
        String user_id = au.getUser_id();
        String queue_name = "";
        if (queue_type.toUpperCase().equals("PN".toUpperCase())) {
            queue_name = au.getUser_name();
        } else {
            queue_name = qnc;
        }
        String queue_desc = txt_desc.getText();
        int quota_temp = 0;
        try {
            quota_temp = Integer.parseInt(txt_quota.getText());
        } catch (Exception e) {
            quota_temp = 0;
            J.o("Invalid Quota", "Invalid number of quota!", 0);
            return;
        }
        String quota = quota_temp + "";
        
        String sql = "INSERT INTO pms_queue_name(queue_type, queue_name, "
                + "queue_description, user_id, quota) "
                + "VALUES('"+queue_type+"', '"+queue_name+"', '"+queue_desc+"', "
                + "'"+user_id+"', '"+quota+"') ";
        DBConnQueue dbc = new DBConnQueue();
        boolean isAdd = dbc.setQuery(sql);
        
        if (isAdd) {
            J.o("Success", "Add Success.", 1);
            setList();
        } else {
            J.o("Failed", "Add Failed!", 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        PMS_Queue_Type_Bean pqt = (PMS_Queue_Type_Bean) cbx_qtc.getSelectedItem();
        String queue_type = pqt.getQueue_type();
        String qnc = txt_qnc.getText();
        
        cbx_qtc.setEditable(false);
        txt_qnc.setEditable(false);
        
        Adm_user_bean au = (Adm_user_bean) cbx_userid.getSelectedItem();
        String user_id = au.getUser_id();
        String queue_name = "";
        if (queue_type.toUpperCase().equals("PN".toUpperCase())) {
            queue_name = au.getUser_name();
        } else {
            queue_name = qnc;
        }
        String queue_desc = txt_desc.getText();
        int quota_temp = 0;
        try {
            quota_temp = Integer.parseInt(txt_quota.getText());
        } catch (Exception e) {
            quota_temp = 0;
            J.o("Invalid Quota", "Invalid number of quota!", 0);
            return;
        }
        String quota = quota_temp + "";
        
        String sql = "UPDATE pms_queue_name "
                + "SET queue_description = '"+queue_desc+"', "
                + "user_id = '"+user_id+"', "
                + "quota = '"+quota+"' "
                + "WHERE queue_type = '"+queue_type+"' "
                + "AND queue_name = '"+queue_name+"' ";
        DBConnQueue dbc = new DBConnQueue();
        boolean isUpdate = dbc.setQuery(sql);
        
        if (isUpdate) {
            J.o("Success", "Update Success.", 1);
            cbx_qtc.setEditable(true);
            txt_qnc.setEditable(true);
            setList();
        } else {
            J.o("Failed", "Update Failed!", 0);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        PMS_Queue_Type_Bean pqt = (PMS_Queue_Type_Bean) cbx_qtc.getSelectedItem();
        String queue_type = pqt.getQueue_type();
        String queue_name = txt_qnc.getText();
        
        String sql = "DELETE FROM pms_queue_name "
                + "WHERE queue_type = '" + queue_type + "' "
                + "AND queue_name = '" + queue_name + "' ";
        DBConnQueue dbc = new DBConnQueue();
        boolean isDelete = dbc.setQuery(sql);

        if (isDelete) {
            J.o("Success", "Delete Success.", 1);
            setList();
        } else {
            J.o("Failed", "Delete Failed!", 0);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tbl_qtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_qtMouseClicked
        // TODO add your handling code here:
        int index = tbl_qt.getSelectedRow();
        String qtc = tbl_qt.getValueAt(index, 0).toString();
        String qnc = tbl_qt.getValueAt(index, 1).toString();
        String user_id = tbl_qt.getValueAt(index, 2).toString();
        String desc = tbl_qt.getValueAt(index, 3).toString();
        String quota = tbl_qt.getValueAt(index, 4).toString();

        Func.cmbSelectInput(cbx_qtc, qtc, true);
        txt_qnc.setText(qnc);
        Func.cmbSelectInput(cbx_userid, user_id, true);
        txt_desc.setText(desc);
        txt_quota.setText(quota);
        
        cbx_qtc.setEditable(false);
        txt_qnc.setEditable(false);
    }//GEN-LAST:event_tbl_qtMouseClicked

    private static String temp_name = "";
    
    private void cbx_qtcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx_qtcItemStateChanged
        // TODO add your handling code here:
        PMS_Queue_Type_Bean pqt = (PMS_Queue_Type_Bean) cbx_qtc.getSelectedItem();
        String code = pqt.getQueue_type();
        if (code.toUpperCase().equals("PN".toUpperCase())) {
            temp_name = txt_qnc.getText();
            Adm_user_bean au = (Adm_user_bean) cbx_userid.getSelectedItem();
            String name = au.getUser_name();
            txt_qnc.setText(name);
            txt_qnc.setEditable(false);
        } else {
            txt_qnc.setText("");
            txt_qnc.setEditable(true);
        }
    }//GEN-LAST:event_cbx_qtcItemStateChanged

    private void cbx_useridItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx_useridItemStateChanged
        // TODO add your handling code here:
        PMS_Queue_Type_Bean pqt2 = (PMS_Queue_Type_Bean) cbx_qtc.getSelectedItem();
        String code = pqt2.getQueue_type();
        if (code.toUpperCase().equals("PN".toUpperCase())) {
            temp_name = txt_qnc.getText();
            Adm_user_bean au = (Adm_user_bean) cbx_userid.getSelectedItem();
            String name = au.getUser_name();
            txt_qnc.setText(name);
            txt_qnc.setEditable(false);
        } else {
//            txt_qnc.setText("");
            txt_qnc.setEditable(true);
        }
    }//GEN-LAST:event_cbx_useridItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MaintainQueueName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MaintainQueueName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MaintainQueueName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MaintainQueueName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MaintainQueueName().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected static javax.swing.JComboBox cbx_qtc;
    protected static javax.swing.JComboBox cbx_status;
    protected static javax.swing.JComboBox cbx_userid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    protected static javax.swing.JTable tbl_qt;
    protected static javax.swing.JTextField txt_desc;
    protected static javax.swing.JTextField txt_qnc;
    protected static javax.swing.JTextField txt_quota;
    // End of variables declaration//GEN-END:variables
}
